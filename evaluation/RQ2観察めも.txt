観察メモ

allのみ
0862ceb2f74e60853ff48de234602d33
OldTree:[$V3] = [$V7].newInstance();
NewTree:[$V3] = [$V7].getDeclaredConstructor().newInstance();
none側では10358位なので推薦されなかった

Hash:c4165e811fe2e31f2e577dcf320c5a1e
OldTree:return [$V5].toString() + $V8;
NewTree:return [$V5] + $V8;
推薦して良いケース
提案手法では10503位なので判定していない

Hash:2b56c4eb9bca0ef65677c8141710efef --> ある
OldTree:throw new Error($V5);
NewTree:throw new NonFatalError($V5);
推薦して良いケース

allでは推薦されたいない
c0b7e605f8ecb5322475a33879fdc32f:1 --> 11a32efeb6fb66519b866418e5b3f67a
OldTree:[$V4].append($V7);
NewTree:[$V4].append('[');
confidenceがめっちゃ低いからall側では推薦されなかった

提案手法+none
Hash:c0b7e605f8ecb5322475a33879fdc32f
OldTree:[$V4].append("[");
NewTree:[$V4].append('[');

提案手法+all
Hash:2b56c4eb9bca0ef65677c8141710efef
OldTree:throw new Error($V5);
NewTree:throw new NonFatalError($V5);
推薦して良いケース

提案手法のみ
Hash:cc906ecab6218bdb306cf4404d35ae6d
OldTree:return description;
NewTree:return this.description;

Hash:96b7ad2bbaa2070cf77f882c74d3c0ea
OldTree:List<String> names = new ArrayList<String>();
NewTree:List<String> names = new ArrayList<>();

Hash:18d407e029dbfac3a4beb7923f0936d8
OldTree:return folder;
NewTree:return directory;

//これらについて
confidenceの値が
変数を正規化したやつ < 変数を正規化してないもの
であり,正規化したやつは10,000圏内に入っていない ため

提案手法のみない
Hash:a8b36b67765aee7be8c541e135966470
10773位, 1.002
OldTree:</p>
NewTree:@author: zyf
 * @date: 2022/04/21

Hash:830eebddb52f6479b61a3d12cbd09d30
12946位, 1.002
OldTree:</code>
NewTree:}

Hash:f84561aa4e4946e3125e8a166a2babec
12641位, 1.002
OldTree:private final List<Object> [$V10];
NewTree:private final List<ContentModel> [$V10];

Hash:058dd6f0f792df47e6baafc519b31f5c
13053位
OldTree:super(message, cause);
NewTree:super(message + ", status code: " + statusCode, cause);

Hash:0862ceb2f74e60853ff48de234602d33
13980位
OldTree:[$V3] = [$V7].newInstance();
NewTree:[$V3] = [$V7].getDeclaredConstructor().newInstance();